<?xml version="1.0" ?>
<launch>
  <arg name="position_controller" default="true"/>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="true"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  
  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="worlds/empty.world"/>
    <!--arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/-->
    <arg name="paused" value="true"/>  
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description" textfile="$(find robot305_description_imu)/urdf/robot305_gazebo_inertia.urdf" /> 
  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node
    name="spawn_model"
    pkg="gazebo_ros"
    type="spawn_model"
    args="-file $(find robot305_description_imu)/urdf/robot305_gazebo_inertia.urdf -urdf -model robot305 -z 0"
    output="screen" />  
    
  <!-- ros_control robotis humanoid launch file -->
  <!--group if ="$(arg position_controller)"-->
    <include file="$(find robot305_control)/launch/robot305_control.launch"/>
  <!--/group-->
</launch>
